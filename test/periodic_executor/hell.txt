==120102== Helgrind, a thread error detector
==120102== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==120102== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==120102== Command: ./utest
==120102== 
==120102== ---Thread-Announcement------------------------------------------
==120102== 
==120102== Thread #1 is the program's root thread
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1: Bug in libpthread: write lock granted on mutex/rwlock which is currently wr-held by a different thread
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x1134FC: mt::PeriodicExecutor::pause() (periodic_executor.cpp:106)
==120102==    by 0x10D663: test_add_task_pause_resume() (utest.cpp:50)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== ---Thread-Announcement------------------------------------------
==120102== 
==120102== Thread #2 was created
==120102==    at 0x4BDA122: clone (clone.S:71)
==120102==    by 0x4A9F2EB: create_thread (createthread.c:101)
==120102==    by 0x4AA0E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==120102==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x493D989: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)
==120102==    by 0x1137B5: std::thread::thread<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}, , void>(mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (std_thread.h:143)
==120102==    by 0x112C0B: mt::PeriodicExecutor::PeriodicExecutor(unsigned long) (periodic_executor.cpp:18)
==120102==    by 0x10D4EC: test_add_task_pause_resume() (utest.cpp:42)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== Possible data race during write of size 1 at 0x1FFEFFFC40 by thread #1
==120102== Locks held: none
==120102==    at 0x113501: mt::PeriodicExecutor::pause() (periodic_executor.cpp:107)
==120102==    by 0x10D663: test_add_task_pause_resume() (utest.cpp:50)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== This conflicts with a previous read of size 1 by thread #2
==120102== Locks held: 1, at address 0x1FFEFFFC50
==120102==    at 0x1131B3: mt::PeriodicExecutor::run()::{lambda()#1}::operator()() const (periodic_executor.cpp:79)
==120102==    by 0x113852: void std::condition_variable::wait<mt::PeriodicExecutor::run()::{lambda()#1}>(std::unique_lock<std::mutex>&, mt::PeriodicExecutor::run()::{lambda()#1}) (condition_variable:102)
==120102==    by 0x11327E: mt::PeriodicExecutor::run() (periodic_executor.cpp:78)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==  Address 0x1ffefffc40 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1 unlocked lock at 0x1FFEFFFC50 currently held by thread #2
==120102==    at 0x48403F6: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113FA0: __gthread_mutex_unlock(pthread_mutex_t*) (gthr-default.h:779)
==120102==    by 0x113FF7: std::mutex::unlock() (std_mutex.h:118)
==120102==    by 0x1146CF: std::unique_lock<std::mutex>::unlock() (unique_lock.h:195)
==120102==    by 0x11434D: std::unique_lock<std::mutex>::~unique_lock() (unique_lock.h:104)
==120102==    by 0x113525: mt::PeriodicExecutor::pause() (periodic_executor.cpp:109)
==120102==    by 0x10D663: test_add_task_pause_resume() (utest.cpp:50)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #6, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #3, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== Possible data race during read of size 1 at 0x1FFEFFFC40 by thread #2
==120102== Locks held: 1, at address 0x1FFEFFFC50
==120102==    at 0x1131B3: mt::PeriodicExecutor::run()::{lambda()#1}::operator()() const (periodic_executor.cpp:79)
==120102==    by 0x113852: void std::condition_variable::wait<mt::PeriodicExecutor::run()::{lambda()#1}>(std::unique_lock<std::mutex>&, mt::PeriodicExecutor::run()::{lambda()#1}) (condition_variable:102)
==120102==    by 0x11327E: mt::PeriodicExecutor::run() (periodic_executor.cpp:78)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==    by 0x493D6B3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)
==120102==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x4AA0608: start_thread (pthread_create.c:477)
==120102== 
==120102== This conflicts with a previous write of size 1 by thread #1
==120102== Locks held: none
==120102==    at 0x113501: mt::PeriodicExecutor::pause() (periodic_executor.cpp:107)
==120102==    by 0x10D663: test_add_task_pause_resume() (utest.cpp:50)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102==  Address 0x1ffefffc40 is on thread #1's stack
==120102==  in frame #3, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== Possible data race during write of size 1 at 0x1FFEFFFC41 by thread #1
==120102== Locks held: none
==120102==    at 0x11360D: mt::PeriodicExecutor::shutDown() (periodic_executor.cpp:122)
==120102==    by 0x10D6D0: test_add_task_pause_resume() (utest.cpp:56)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== This conflicts with a previous read of size 1 by thread #2
==120102== Locks held: 1, at address 0x1FFEFFFC50
==120102==    at 0x113333: mt::PeriodicExecutor::run() (periodic_executor.cpp:70)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==    by 0x493D6B3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)
==120102==  Address 0x1ffefffc41 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1: pthread_cond_{signal,broadcast}: associated lock is not held by calling thread
==120102==    at 0x48407B6: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113628: mt::PeriodicExecutor::shutDown() (periodic_executor.cpp:123)
==120102==    by 0x10D6D0: test_add_task_pause_resume() (utest.cpp:56)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1: pthread_cond_{signal,broadcast}: associated lock is not held by calling thread
==120102==    at 0x48407B6: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x112CAD: mt::PeriodicExecutor::~PeriodicExecutor() (periodic_executor.cpp:28)
==120102==    by 0x10D77C: test_add_task_pause_resume() (utest.cpp:58)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #4, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
==120102== Possible data race during read of size 1 at 0x1FFEFFFC41 by thread #2
==120102== Locks held: 1, at address 0x1FFEFFFC50
==120102==    at 0x113333: mt::PeriodicExecutor::run() (periodic_executor.cpp:70)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==    by 0x493D6B3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)
==120102==    by 0x4842B1A: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x4AA0608: start_thread (pthread_create.c:477)
==120102==    by 0x4BDA132: clone (clone.S:95)
==120102== 
==120102== This conflicts with a previous write of size 1 by thread #1
==120102== Locks held: none
==120102==    at 0x112C95: mt::PeriodicExecutor::~PeriodicExecutor() (periodic_executor.cpp:27)
==120102==    by 0x10D77C: test_add_task_pause_resume() (utest.cpp:58)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102==  Address 0x1ffefffc41 is on thread #1's stack
==120102==  in frame #4, created by test_add_task_pause_resume() (utest.cpp:41)
==120102== 
Exception in task: task lambda exception
Executor is overloaded, task <bool> submission failed.
==120102== ---Thread-Announcement------------------------------------------
==120102== 
==120102== Thread #5 was created
==120102==    at 0x4BDA122: clone (clone.S:71)
==120102==    by 0x4A9F2EB: create_thread (createthread.c:101)
==120102==    by 0x4AA0E0F: pthread_create@@GLIBC_2.2.5 (pthread_create.c:817)
==120102==    by 0x4842917: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x493D989: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)
==120102==    by 0x1137B5: std::thread::thread<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}, , void>(mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (std_thread.h:143)
==120102==    by 0x112C0B: mt::PeriodicExecutor::PeriodicExecutor(unsigned long) (periodic_executor.cpp:18)
==120102==    by 0x10E2BF: test_add_task_more_then_capacity() (utest.cpp:108)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_more_then_capacity() (utest.cpp:107)
==120102== 
==120102== Possible data race during write of size 1 at 0x1FFEFFFC40 by thread #1
==120102== Locks held: none
==120102==    at 0x113501: mt::PeriodicExecutor::pause() (periodic_executor.cpp:107)
==120102==    by 0x10E436: test_add_task_more_then_capacity() (utest.cpp:116)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== This conflicts with a previous read of size 1 by thread #5
==120102== Locks held: 1, at address 0x1FFEFFFC50
==120102==    at 0x1131B3: mt::PeriodicExecutor::run()::{lambda()#1}::operator()() const (periodic_executor.cpp:79)
==120102==    by 0x113852: void std::condition_variable::wait<mt::PeriodicExecutor::run()::{lambda()#1}>(std::unique_lock<std::mutex>&, mt::PeriodicExecutor::run()::{lambda()#1}) (condition_variable:102)
==120102==    by 0x11327E: mt::PeriodicExecutor::run() (periodic_executor.cpp:78)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==  Address 0x1ffefffc40 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_more_then_capacity() (utest.cpp:107)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1 unlocked lock at 0x1FFEFFFC50 currently held by thread #5
==120102==    at 0x48403F6: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113FA0: __gthread_mutex_unlock(pthread_mutex_t*) (gthr-default.h:779)
==120102==    by 0x113FF7: std::mutex::unlock() (std_mutex.h:118)
==120102==    by 0x1146CF: std::unique_lock<std::mutex>::unlock() (unique_lock.h:195)
==120102==    by 0x11434D: std::unique_lock<std::mutex>::~unique_lock() (unique_lock.h:104)
==120102==    by 0x113525: mt::PeriodicExecutor::pause() (periodic_executor.cpp:109)
==120102==    by 0x10E436: test_add_task_more_then_capacity() (utest.cpp:116)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #6, created by test_add_task_more_then_capacity() (utest.cpp:107)
==120102== 
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102==  Lock at 0x1FFEFFFC50 was first observed
==120102==    at 0x483FEDF: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113F71: __gthread_mutex_lock(pthread_mutex_t*) (gthr-default.h:749)
==120102==    by 0x113FC5: std::mutex::lock() (std_mutex.h:100)
==120102==    by 0x114922: std::unique_lock<std::mutex>::lock() (unique_lock.h:139)
==120102==    by 0x11431A: std::unique_lock<std::mutex>::unique_lock(std::mutex&) (unique_lock.h:69)
==120102==    by 0x113201: mt::PeriodicExecutor::run() (periodic_executor.cpp:69)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==  Address 0x1ffefffc50 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_more_then_capacity() (utest.cpp:107)
==120102== 
==120102== Possible data race during write of size 1 at 0x1FFEFFFC41 by thread #1
==120102== Locks held: none
==120102==    at 0x11360D: mt::PeriodicExecutor::shutDown() (periodic_executor.cpp:122)
==120102==    by 0x10E4A3: test_add_task_more_then_capacity() (utest.cpp:122)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== This conflicts with a previous read of size 1 by thread #5
==120102== Locks held: 1, at address 0x1FFEFFFC50
==120102==    at 0x113333: mt::PeriodicExecutor::run() (periodic_executor.cpp:70)
==120102==    by 0x112B62: mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}::operator()() const (periodic_executor.cpp:18)
==120102==    by 0x113E89: void std::__invoke_impl<void, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_other, mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&) (invoke.h:61)
==120102==    by 0x113E3E: std::__invoke_result<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>::type std::__invoke<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}>(std::__invoke_result&&, (mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}&&)...) (invoke.h:96)
==120102==    by 0x113DEB: void std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:253)
==120102==    by 0x113DBF: std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> >::operator()() (std_thread.h:260)
==120102==    by 0x113DA3: std::thread::_State_impl<std::thread::_Invoker<std::tuple<mt::PeriodicExecutor::PeriodicExecutor(unsigned long)::{lambda()#1}> > >::_M_run() (std_thread.h:211)
==120102==    by 0x493D6B3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29)
==120102==  Address 0x1ffefffc41 is on thread #1's stack
==120102==  in frame #1, created by test_add_task_more_then_capacity() (utest.cpp:107)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1: pthread_cond_{signal,broadcast}: associated lock is not held by calling thread
==120102==    at 0x48407B6: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x113628: mt::PeriodicExecutor::shutDown() (periodic_executor.cpp:123)
==120102==    by 0x10E4A3: test_add_task_more_then_capacity() (utest.cpp:122)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== ----------------------------------------------------------------
==120102== 
==120102== Thread #1: pthread_cond_{signal,broadcast}: associated lock is not held by calling thread
==120102==    at 0x48407B6: ??? (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_helgrind-amd64-linux.so)
==120102==    by 0x112CAD: mt::PeriodicExecutor::~PeriodicExecutor() (periodic_executor.cpp:28)
==120102==    by 0x10E54F: test_add_task_more_then_capacity() (utest.cpp:124)
==120102==    by 0x10EC5B: main (utest.cpp:131)
==120102== 
==120102== 
==120102== Use --history-level=approx or =none to gain increased speed, at
==120102== the cost of reduced accuracy of conflicting-access information
==120102== For lists of detected and suppressed errors, rerun with: -s
==120102== ERROR SUMMARY: 24 errors from 13 contexts (suppressed: 5437 from 43)
